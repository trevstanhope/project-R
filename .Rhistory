View(rtk_data)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
View(cv_v)
View(cv_v)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
View(rtk_v)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
r[:]
rtk_v[1:2]
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
error_v = rtk_v - cv_v;
error_v = rtk_v - cv_v;
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
fit_threshold
fit_surface
summary(fit_threshold)
summary(fit_surface)
by_threshold
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
`00
1
''
`
100
str(100)
toString(100)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
summary(fit_threshold)
model.tables(fit_threshold, "means") # For type = "means", returns the mean for each term
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
abline(fit_freq);
boxplot(by_threshold$Freq ~ by_threshold$Threshold, show.names=TRUE);
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
plot(hsd_surface) # Plot to see results
boxplot(by_threshold$Error ~ by_threshold$Threshold, show.names=TRUE, xlab="Keypoint Threshold", ylab="Error (m/s)");
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
boxplot(by_threshold$Error ~ by_threshold$Threshold, show.names=TRUE, xlab="Keypoint Threshold", ylab="Error (m/s)");
boxplot(by_threshold$Error ~ by_threshold$Threshold, show.names=TRUE, xlab="Threshold (Keypoints per Image)", ylab="Error (m/s)");
boxplot(by_surface$Error ~ by_surface$Surface, show.names=TRUE);
boxplot(by_surface$Error ~ by_surface$Surface, show.names=TRUE, xlab="Surface", ylab="Error (m/s)");
boxplot(by_threshold$Error ~ by_threshold$Threshold, show.names=TRUE, xlab="Threshold (Keypoints per Image)", ylab="Error (m/s)");
boxplot(by_surface$Error ~ by_surface$Surface, show.names=TRUE, xlab="Surface", ylab="Error (m/s)");
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
}
hsd_surface # View table for significant differences within groups
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
hsd_surface # View table for significant differences within groups
plot(hsd_surface) # Plot to see results
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
CONFIDENCE = 0.95
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
optimOut <- optim(par=parGuess,
fn=loss1,
method="BFGS",
xObs=by_threshold$Error,
yObs=by_threshold$Speed)
optimOut
optimOut <- optim(par=parGuess,
fn=loss1,
method="BFGS",
xObs=by_threshold$Error,
yObs=by_threshold$Speed)
optimOut <- optim(par=parGuess,
fn=loss1,
method="BFGS",
xObs=by_threshold$Error,
yObs=by_threshold$Speed,
log=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
hsd_surface_pct # View table for significant differences within groups
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
summary(lm_freq_threshold);
summary(lm_freq_surface);
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
plot(hsd_surface_pct); # Plot to see results
hsd_surface_pct # View table for significant differences within groups
boxplot(by_surface_pct$Error ~ by_surface_pct$Surface, show.names=TRUE, ylim=c(-2.5, 2.5), xlab="Surface", ylab="Error (m/s)");
## Analyze Error ~ Surface x Percentile
boxplot(by_surface_pct$Error ~ by_surface_pct$Surface, show.names=TRUE, ylim=c(-2.5, 2.5), xlab="Surface", ylab="Error (m/s)");
boxplot(by_surface_pct$Error ~ by_surface_pct$Surface, show.names=TRUE, ylim=c(-2.5, 2.5), xlab="Surface", ylab="Error (m/s)");
fit_surface_pct = aov(Error ~ Surface, data=by_surface_pct);
summary(fit_surface_pct);
model.tables(fit_surface_pct, "means") # For type = "means", returns the mean for each term
hsd_surface_pct <- TukeyHSD(fit_surface, conf.level=CONFIDENCE); # the confidence level
hsd_surface_pct # View table for significant differences within groups
plot(hsd_surface_pct); # Plot to see results
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
boxplot(by_surface_pct$Error ~ by_surface_pct$Surface, show.names=TRUE, ylim=c(-2.5, 2.5), xlab="Surface", ylab="Error (m/s)");
fit_surface_pct = aov(Error ~ Surface, data=by_surface_pct);
summary(fit_surface_pct);
model.tables(fit_surface_pct, "means") # For type = "means", returns the mean for each term
hsd_surface_pct <- TukeyHSD(fit_surface, conf.level=CONFIDENCE); # the confidence level
hsd_surface_pct # View table for significant differences within groups
plot(hsd_surface_pct); # Plot to see results
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
hydroGOF
library("hydroGOF")
library("hydroGOF")
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
hsd_surface_pct # View table for significant differences within groups
hsd_surface_pct <- TukeyHSD(fit_surface, conf.level=CONFIDENCE); # the confidence level
hz = cv_data['hz'];
n = lengths(hz);
trial = data.frame(Error=unname(error), Speed=unname(speed), Freq=unname(hz), Threshold=rep(toString(threshold), n));
by_threshold = rbind(by_threshold, trial); # append trial to data set
}
plot(hsd_surface_pct); # Plot to see results
boxplot(by_surface_pct$Error ~ by_surface_pct$Surface, show.names=TRUE, ylim=c(-2.5, 2.5), xlab="Surface", ylab="Error (m/s)");
fit_surface_pct = aov(Error ~ Surface, data=by_surface_pct);
summary(fit_surface_pct);
model.tables(fit_surface_pct, "means") # For type = "means", returns the mean for each term
hsd_surface_pct <- TukeyHSD(fit_surface_pct, conf.level=CONFIDENCE); # the confidence level
hsd_surface_pct # View table for significant differences within groups
plot(hsd_surface_pct); # Plot to see results
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
## Analyze Error ~ Surface x Percentile
boxplot(by_surface_pct$Error ~ by_surface_pct$Surface, show.names=TRUE, ylim=c(-2.5, 2.5), xlab="Surface", ylab="Error (m/s)");
fit_surface_pct = aov(Error ~ Surface, data=by_surface_pct);
summary(fit_surface_pct);
model.tables(fit_surface_pct, "means") # For type = "means", returns the mean for each term
hsd_surface_pct <- TukeyHSD(fit_surface_pct, conf.level=CONFIDENCE); # the confidence level
hsd_surface_pct # View table for significant differences within groups
plot(hsd_surface_pct); # Plot to see results
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
boxplot(by_surface_pct$Error ~ by_surface_pct$Surface, show.names=TRUE, ylim=c(0, 2.5), xlab="Surface", ylab="Error (m/s)");
fit_surface_pct = aov(Error ~ Surface, data=by_surface_pct);
summary(fit_surface_pct);
model.tables(fit_surface_pct, "means") # For type = "means", returns the mean for each term
hsd_surface_pct <- TukeyHSD(fit_surface_pct, conf.level=CONFIDENCE); # the confidence level
hsd_surface_pct # View table for significant differences within groups
plot(hsd_surface_pct); # Plot to see results
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
## Analyze Error ~ Surface x Percentile
boxplot(by_surface_pct$Error ~ by_surface_pct$Surface, show.names=TRUE, ylim=c(0, 2.5), xlab="Surface", ylab="Error (m/s)");
fit_surface_pct = aov(Error ~ Surface, data=by_surface_pct);
summary(fit_surface_pct);
model.tables(fit_surface_pct, "means") # For type = "means", returns the mean for each term
hsd_surface_pct <- TukeyHSD(fit_surface_pct, conf.level=CONFIDENCE); # the confidence level
hsd_surface_pct # View table for significant differences within groups
plot(hsd_surface_pct); # Plot to see results
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
boxplot(by_surface_pct$Error ~ by_surface_pct$Surface, show.names=TRUE, ylim=c(0, 2.5), xlab="Surface", ylab="Error (m/s)");
fit_surface_pct = aov(Error ~ Surface, data=by_surface_pct);
summary(fit_surface_pct);
model.tables(fit_surface_pct, "means") # For type = "means", returns the mean for each term
hsd_surface_pct <- TukeyHSD(fit_surface_pct, conf.level=CONFIDENCE); # the confidence level
hsd_surface_pct # View table for significant differences within groups
plot(hsd_surface_pct); # Plot to see results
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
boxplot(by_surface_rmse$Error ~ by_surface_rmse$Surface, show.names=TRUE, ylim=c(0, 5), xlab="Surface", ylab="RMSE (m/s)");
## Analyze Error ~ Surface x Percentile
boxplot(by_surface_pct$Error ~ by_surface_pct$Surface, show.names=TRUE, ylim=c(0, 5), xlab="Surface", ylab="Error (m/s)");
fit_surface_pct = aov(Error ~ Surface, data=by_surface_pct);
summary(fit_surface_pct);
model.tables(fit_surface_pct, "means") # For type = "means", returns the mean for each term
hsd_surface_pct <- TukeyHSD(fit_surface_pct, conf.level=CONFIDENCE); # the confidence level
hsd_surface_pct # View table for significant differences within groups
plot(hsd_surface_pct); # Plot to see results
boxplot(by_surface$Error ~ by_surface$Surface, show.names=TRUE, ylim=c(-2.5, 2.5), xlab="Surface", ylab="Error (m/s)");
fit_surface = aov(Error ~ Surface, data=by_surface);
summary(fit_surface);
model.tables(fit_surface, "means") # For type = "means", returns the mean for each term
hsd_surface <- TukeyHSD(fit_surface, conf.level=CONFIDENCE); # the confidence level
hsd_surface # View table for significant differences within groups
plot(hsd_surface); # Plot to see results
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
plot(by_threshold$Speed, by_threshold$Error);
plot(by_threshold$Speed, by_threshold$Error, pch=20);
with(by_threshold[by_threshold$Surface == "Seedlings",], plot(by_threshold$Speed, by_threshold$Error))
with(by_threshold[by_threshold$Surface == "Seedlings",], plot(by_threshold$Speed, by_threshold$Error))
with(by_threshold[by_threshold$Surface == "Seedlings",], plot(Speed, Error))
by_threshold$
with(by_threshold[by_threshold$Surface == "Seedlings",], plot(by_threshold$Speed, by_threshold$Error))
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
data_set <- by_threshold[ which(by_threshold$Surface=='Asphalt'), ]
plot(data_set$Speed, data_set$Error, pch=20);
boxplot(by_surface_rmse$Error ~ by_surface_rmse$Surface, show.names=TRUE, ylim=c(0, 5), xlab="Surface", ylab="RMSE (m/s)");
fit_surface_rmse = aov(Error ~ Surface, data=by_surface_rmse);
summary(fit_surface_rmse);
model.tables(fit_surface_rmse, "means") # For type = "means", returns the mean for each t
data_set <- by_threshold[ which(by_threshold$Surface = 'Asphalt'), ]
data_set <- by_threshold[ which(by_threshold$Surface == "Asphalt"), ]
data_set <- by_threshold[ which(by_surface$Surface == "Asphalt"), ]
plot(data_set$Speed, data_set$Error, pch=20);
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
par(mfrow=c(1,2))
data_set <- by_surface[ which(by_surface$Surface == "Residue"), ]
plot(data_set$Speed, data_set$Error, pch=20);
data_set <- by_surface[ which(by_surface$Surface == "Asphalt"), ]
plot(data_set$Speed, data_set$Error, pch=20);
attach(mtcars)
par(mfrow=c(1,2))
data_set <- by_surface[ which(by_surface$Surface == "Residue"), ]
plot(data_set$Speed, data_set$Error, pch=20);
data_set <- by_surface[ which(by_surface$Surface == "Asphalt"), ]
plot(data_set$Speed, data_set$Error, pch=20);
par(mfrow=c(1,2))
data_set <- by_surface[ which(by_surface$Surface == "Residue"), ]
plot(data_set$Speed, data_set$Error, pch=20);
data_set <- by_surface[ which(by_surface$Surface == "Asphalt"), ]
plot(data_set$Speed, data_set$Error, pch=20);
attach(mtcars)
par(mfrow=c(3,1))
data_set <- by_surface[ which(by_surface$Surface == "Residue"), ]
hist(data_set$Speed, data_set$Error, pch=20);
data_set <- by_surface[ which(by_surface$Surface == "Asphalt"), ]
hist(data_set$Speed, data_set$Error, pch=20);
data_set <- by_surface[ which(by_surface$Surface == "Asphalt"), ]
hist(data_set$Speed, data_set$Error, pch=20);
attach(mtcars)
par(mfrow=c(3,1))
data_set <- by_surface[ which(by_surface$Surface == "Residue"), ]
plot(data_set$Speed, data_set$Error, pch=20);
data_set <- by_surface[ which(by_surface$Surface == "Asphalt"), ]
plot(data_set$Speed, data_set$Error, pch=20);
data_set <- by_surface[ which(by_surface$Surface == "Asphalt"), ]
plot(data_set$Speed, data_set$Error, pch=20);
hist(data_set$Speed, data_set$Error, pch=20);
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
int = aov(Error ~ Surface * Threshold, data=data_rmse);
summary(int);
noint = aov(Error ~ Surface + Threshold, data=data_rmse);
summary(noint)
summary(fit_rmse_threshold);
hsd_rmse_threshold # View table for significant differences within groups
model.tables(fit_rmse_threshold, "means"); # For type = "means", returns the mean for each term
hsd_rmse_threshold # View table for significant differences within groups
summary(noint)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
plot(data_rmse$Freq)
int2 = aov(Error ~ Threshold * Freq, data=data_rmse);
summary(int2)
int2 = aov(Error ~ Threshold + Freq, data=data_rmse);
summary(int2)
int2 = aov(Error ~ Threshold * Freq, data=data_rmse);
summary(int2)
plot(data_rmse$Threshold, data_rmse$Freq)
int2 = aov(Freq ~ Threshold, data=data_rmse);
summary(int2)
int2 = aov(Freq ~ Threshold * Surface, data=data_rmse);
summary(int2)
int2 = aov(Freq ~ Surface, data=data_rmse);
summary(int2)
int2 = aov(Freq ~ Surface + Threshold, data=data_rmse);
summary(int2)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
int2 = aov(Freq ~ Surface + Threshold, data=data_rmse);
summary(int2)
int2 = aov(Freq ~ Surface + Threshold, data=data_rmse);
summary(int2)
int2 = aov(Freq ~ Surface * Threshold, data=data_rmse);
summary(int2)
int2 = aov(Freq ~ Error, data=data_rmse);
summary(int2)
int2 = aov(Error ~ Freq * Threshold , data=data_rmse);
summary(int2)
int2 = aov(Error ~ Freq * Threshold , data=data_rmse);
summary(int2)
int2 = aov(Error ~ Freq * Threshold * Surface, data=data_rmse);
summary(int2)
1000 / 18
boxplot(data_rmse$Error ~ data_rmse$Surface, xlab="Surface", ylab="RMSE (km/h)", ylim=c(0,5))
e
boxplot(by_surface$Freq ~ by_surface$Surface, show.names=TRUE, xlab="Surface", ylab="Frequency (Hz)");
boxplot(by_surface$Freq ~ by_surface$Surface, show.names=TRUE, xlab="Surface", ylab="Frequency (Hz)", ylim=c(0,30));
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
boxplot(by_surface$Error ~ by_surface$Surface, show.names=TRUE, ylim=c(-5, 5), xlab="Surface", ylab="Error (km/h)");
boxplot(by_surface$Error ~ by_surface$Surface, show.names=TRUE, ylim=c(-10, 10), xlab="Surface", ylab="Error (km/h)");
boxplot(by_threshold$Error ~ by_threshold$Threshold, show.names=TRUE, ylim=c(-10, 10), xlab="Threshold (Keypoints per Image)", ylab="Error (km/h)");
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
noint = aov(Error ~ Height, data=data_rmse);
summary(noint)
boxplot(data_rmse$Error ~ data_rmse$Height, xlab="Height", ylab="RMSE (km/h)", ylim=c(0,5))
fit_rmse_height = aov(Error ~ Height, data=data_rmse);
summary(fit_rmse_height);
model.tables(fit_rmse_height, "means"); # For type = "means", returns the mean for each term
hsd_rmse_height <- TukeyHSD(fit_rmse_height, conf.level=CONFIDENCE); # the confidence level
hsd_rmse_height # View table for significant differences within groups
plot(hsd_rmse_height); # Plot to see results
lm_rmse_threshold = lm(Error ~ Height, data=data_rmse);
summary(lm_rmse_height);
boxplot(data_rmse$Error ~ data_rmse$Height, xlab="Height", ylab="RMSE (km/h)", ylim=c(0,5))
fit_rmse_height = aov(Error ~ Height, data=data_rmse);
summary(fit_rmse_height);
model.tables(fit_rmse_height, "means"); # For type = "means", returns the mean for each term
hsd_rmse_height <- TukeyHSD(fit_rmse_height, conf.level=CONFIDENCE); # the confidence level
hsd_rmse_height # View table for significant differences within groups
plot(hsd_rmse_height); # Plot to see results
lm_rmse_height = lm(Error ~ Height, data=data_rmse);
summary(lm_rmse_height);
boxplot(data_rmse$Error ~ data_rmse$Height, xlab="Height", ylab="RMSE (km/h)", ylim=c(0,5))
fit_rmse_height = aov(Error ~ Height * Threshold, data=data_rmse);
summary(fit_rmse_height);
model.tables(fit_rmse_height, "means"); # For type = "means", returns the mean for each term
hsd_rmse_height <- TukeyHSD(fit_rmse_height, conf.level=CONFIDENCE); # the confidence level
hsd_rmse_height # View table for significant differences within groups
plot(hsd_rmse_height); # Plot to see results
lm_rmse_height = lm(Error ~ Height, data=data_rmse);
summary(lm_rmse_height);
summary(fit_rmse_height);
45 * 25
data_rmse
lengths(data_rmse)
lengths(by_surface)
32191 / 30
1073 / 25
shapiro.test(trial$Error)
lm_rmse_height = lm(Error ~ Height, data=data_rmse);
summary(lm_rmse_height);
int = aov(Error ~ Surface * Threshold, data=data_rmse);
summary(int);
noint = aov(Error ~ Surface + Threshold, data=data_rmse);
summary(noint)
int2 = aov(Error ~ Freq * Threshold * Surface, data=data_rmse);
summary(int2)
noint = aov(Error ~ Height, data=data_rmse);
summary(noint)
int = aov(Error ~ Surface * Threshold, data=data_rmse);
summary(int);
noint = aov(Error ~ Surface + Threshold, data=data_rmse);
summary(noint)
int2 = aov(Error ~ Freq * Threshold * Surface, data=data_rmse);
summary(int2)
noint = aov(Error ~ Height, data=data_rmse);
summary(noint)
summary(lm_rmse_height);
qqnorm(trial)
qqnorm(trial$Error)
qqnorm(data_rmse$Error)
resid(data_rmse$Error)
resid(trial$Error)
res = resid(lm_rmse_height)
plot(data_rmse$Height, res)
plot(data_rmse$Height, res)
res = resid(lm_rmse_height)
plot(data_rmse$Height, res)
plot(data_rmse$Error, res)
lm(Error ~ Speed, data=trial)
trial.lm = lm(formula = Error ~ Speed, data = trial)
trial.res = resid(trial.lm)
plot(trial$Error, trial.res)
plot(trial, trial.res)
trial$Error
trial.res
trial$Error
trial$Error
plot(trial$Error)
plot(trial$Error, trial$Speed)
res = resid(lm_rmse_height)
plot(data_rmse$Error, res)
res = resid(lm_rmse_height)
plot(data_rmse$Height, res)
res = resid(lm_rmse_height)
plot(data_rmse$Height, res)
res = resid(lm_rmse_height)
plot(data_rmse$Height, res)
summary(lm_rmse_height);
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
plot(trial.res);
noint = aov(Error ~ Surface + Threshold, data=data_rmse);
summary(noint)
int_mult = aov(Error ~ Surface * Threshold, data=data_rmse);
summary(int_mult);
int_add = aov(Error ~ Surface + Threshold, data=data_rmse);
summary(int_add)
noint = aov(Error ~ Height, data=data_rmse);
summary(no_int)
## Two-Way Anova
int_mult = aov(Error ~ Surface * Threshold, data=data_rmse);
summary(int_mult);
int_add = aov(Error ~ Surface + Threshold, data=data_rmse);
summary(int_add)
no_int = aov(Error ~ Height, data=data_rmse);
summary(no_int)
## Two-Way Anova
int_mult = aov(Error ~ Surface * Threshold, data=data_rmse);
summary(int_mult);
int_add = aov(Error ~ Surface + Threshold, data=data_rmse);
summary(int_add)
no_int = aov(Error ~ Height, data=data_rmse);
summary(no_int)
int_mult = aov(Error ~ Surface * Threshold, data=data_rmse);
summary(int_mult);
int_add = aov(Error ~ Surface + Threshold, data=data_rmse);
summary(int_add)
no_int = aov(Error ~ Height, data=data_rmse);
summary(no_int)
int_mult = aov(Error ~ Surface * Threshold, data=data_rmse);
summary(int_mult);
int_add = aov(Error ~ Surface + Threshold, data=data_rmse);
summary(int_add);
no_int = aov(Error ~ Height, data=data_rmse);
summary(no_int);
int_mult = aov(Error ~ Surface * Threshold, data=data_rmse);
summary(int_mult);
int_add = aov(Error ~ Surface + Threshold, data=data_rmse);
summary(int_add);
no_int = aov(Error ~ Surface, data=data_rmse);
summary(no_int);
## Two-Way ANOVAs
int_mult = aov(Error ~ Surface * Threshold, data=data_rmse);
summary(int_mult);
int_add = aov(Error ~ Surface + Threshold, data=data_rmse);
summary(int_add);
no_int = aov(Error ~ Surface, data=data_rmse);
summary(no_int);
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
int_add
summary(int_add)
boxplot(data_rmse$Error ~ data_rmse$Surface, xlab="Surface", ylab="95th Percentile (km/h)", ylim=c(0,5))
boxplot(data_rmse$Error ~ data_rmse$Surface, xlab="Surface", ylab="95th Percentile (km/h)", ylim=c(0,10))
boxplot(data_rmse$Error ~ data_rmse$Surface, xlab="Surface", ylab="95th Percentile (km/h)", ylim=c(0,20))
boxplot(data_rmse$Error ~ data_rmse$Surface, xlab="Surface", ylab="95th Percentile (km/h)", ylim=c(0,15))
boxplot(data_rmse$Error ~ data_rmse$Surface, xlab="Surface", ylab="95th Percentile (km/h)", ylim=c(0,5))
boxplot(data_rmse$Error ~ data_rmse$Surface, xlab="Surface", ylab="95th Percentile (km/h)", ylim=c(0,15))
hsd_rmse_height # View table for significant differences within groups
32191 * 5
table(by_surface$Surface)
## Analyze Frequency ~ Surface
boxplot(by_surface$Freq ~ by_surface$Surface, show.names=TRUE, xlab="Surface", ylab="Frequency (Hz)", ylim=c(0,40));
fit_freq_surface = aov(Freq ~ Surface, data=by_surface);
summary(fit_freq_surface);
model.tables(fit_freq_surface, "means"); # For type = "means", returns the mean for each term
hsd_freq_surface <- TukeyHSD(fit_freq_surface, conf.level=CONFIDENCE); # the confidence level
hsd_freq_surface # View table for significant differences within groups
plot(hsd_freq_surface); # Plot to see results
lm_freq_surface = lm(Freq ~ Surface, data=by_surface);
summary(lm_freq_surface);
source('~/Trevor Docs/Repos/project-R/VSLAM.R', echo=TRUE)
## Analyze Frequency ~ Surface
boxplot(by_surface$Freq ~ by_surface$Surface, show.names=TRUE, xlab="Surface", ylab="Frequency (Hz)", ylim=c(0,40));
fit_freq_surface = aov(Freq ~ Surface, data=by_surface);
summary(fit_freq_surface);
model.tables(fit_freq_surface, "means"); # For type = "means", returns the mean for each term
hsd_freq_surface <- TukeyHSD(fit_freq_surface, conf.level=CONFIDENCE); # the confidence level
hsd_freq_surface # View table for significant differences within groups
plot(hsd_freq_surface); # Plot to see results
lm_freq_surface = lm(Freq ~ Surface, data=by_surface);
summary(lm_freq_surface);
